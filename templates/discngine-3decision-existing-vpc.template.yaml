---
AWSTemplateFormatVersion: "2010-09-09"
Description: "This sets up the Discngine 3decision infrastructure. (qs-1snm79fed)."
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into an existing VPC"
  LintSpellExclude:
    - Discngine
    - 3decision
    - namespace
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Infrastructure deployment configuration
        Parameters:
          - StackOperation
          - ExecutionAmiId
          - ExecutionRoleName
          - BucketName
          - GitBranch
      - Label:
          default: 3decision app configuration
        Parameters:
          - TdecisionVersion
          - TdecisionNamespace
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Amazon EKS configuration
        Parameters:
          - KubernetesVersion
          - NodeVolumeSize
          - NodeInstanceType
          - AdditionalEKSAdminUserArn
          - AdditionalEKSAdminRoleArn
          - CustomAmiId
      - Label:
          default: Discngine 3decision network configuration
        Parameters:
          - DomainName
          - MainSubdomain
          - ApiSubdomain
          - HostedZoneId
          - CertificateArn
          - LoadBalancerType
      - Label:
          default : Discngine 3decision database configuration
        Parameters:
          - DBSnapshotIdentifier
          - DBInstanceClass
          - DBMultiZone
      - Label:
          default: Discngine 3decision azure authentication configuration
        Parameters:
          - AzureClientId
          - AzureTenant
          - AzureSecret
      - Label:
          default: Discngine 3decision okta authentication configuration
        Parameters:
          - OktaClientId
          - OktaSecret
          - OktaDomain
          - OktaServerId
    ParameterLabels:
      ExecutionAmiId:
        default: AMI id for infrastructure updates
      ExecutionRoleName:
        default: Name of role creating the infrastructure
      StackOperation:
        default: Whether to apply (create/update) or destroy the ressources
      BucketName:
        default: Name of the S3 bucket containing the terraform state
      GitBranch:
        default: The branch to use to deploy the architecture
      TdecisionVersion:
        default: The version of the 3decision helm chart
      TdecisionNamespace:
        default: The namespace to deploy the 3decision helm chart in
      KeyPairName:
        default: SSH key name
      PrivateSubnet1ID:
        default: Private subnet 1 ID
      PrivateSubnet2ID:
        default: Private subnet 2 ID
      PrivateSubnet3ID:
        default: Private subnet 3 ID
      NodeInstanceType:
        default: Node instance type
      AdditionalEKSAdminUserArn:
        default: Additional EKS admin ARN (IAM user)
      AdditionalEKSAdminRoleArn:
        default: Additional EKS admin ARN (IAM role)
      KubernetesVersion:
        default: Kubernetes version
      CustomAmiId:
        default: Custom AMI Id
      NodeVolumeSize:
        default: Size of worker nodes volumes
      DBSnapshotIdentifier:
        default: Identifier of the database snapshot
      DBInstanceClass:
        default: Instance type of the database
      DBMultiZone:
        default: Whether the DB is highly available
      HostedZoneId:
        default: Route 53 hosted zone Id
      DomainName:
        default: Domain name used for load balancing
      MainSubdomain:
        default: Subdomain name for app landing page
      ApiSubdomain:
        default: Subdomain of the api
      CertificateArn:
        default: Arn of a certificate
      LoadBalancerType:
        default: Type of loadbalancer created
      AzureClientId:
        default: Azure app client id
      AzureSecret:
        default: Azure app secret
      AzureTenant:
        default: Azure tenant
      OktaClientId:
        default: Okta app client id
      OktaSecret:
        default: Okta app secret
      OktaDomain:
        default: Okta domain
      OktaServerId:
        default: Okta server id
Parameters:
  StackOperation:
    Description: "Whether to apply (create/update) or destroy the ressources"
    Type: String
    Default: "apply"
    AllowedValues:
      - apply
      - destroy
  ExecutionAmiId:
    Description: "Optional: AMI id to use for the ec2 doing the infrastructure updates. If left empty, the latest amazon2-linux ami will be used"
    Type: String
    Default: ""
  ExecutionRoleName:
    Type: String
    Description: "Optional: Name of a role that will run the infrastructure creation. If left empty, the role will be created with all needed permissions"
    Default: ""
  BucketName:
    Type: String
    Description: "Optional: Name of an S3 bucket in which to store the terraform state. If left empty, a bucket will be created by the stack."
    Default: ""
  GitBranch:
    Type: String
    Description: "Required: The branch to use to deploy the architecture. Do not change if not asked."
    Default: "main"
  TdecisionVersion:
    Type: String
    Description: "Optional: If set, will deploy that version of the 3decision helm chart. If left empty the latest version will be deployed."
    Default: ""
  TdecisionNamespace:
    Type: String
    Description: "Required: The kubernetes namespace into which to deploy the 3decision helm chart"
    Default: "tdecision"
  KeyPairName:
    Description: A public/private key pair, which allows you to connect securely to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing Keyname
  NodeInstanceType:
    Type: String
    Default: t3.2xlarge
    Description: EKS node instance type. We recommend using t3.2xlarge.
    AllowedValues:
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
  VPCID:
    Description: "Required: The ID of the VPC."
    Type: String
  PrivateSubnet1ID:
    Description: "Required: The ID of the private subnet located in Availability Zone 1."
    Type: String
  PrivateSubnet2ID:
    Description: "Required: The ID of the private subnet located in Availability Zone 2."
    Type: String
  PrivateSubnet3ID:
    Description: "Optional: The ID of the private subnet 3 located in Availability Zone 3."
    Type: String
  KubernetesVersion:
  # https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html#kubernetes-release-calendar
    Type: String
    Description: Kubernetes control plane version.
    AllowedValues: ['1.23', '1.24', '1.25', '1.26', '1.27']
    Default: '1.27'
  NodeVolumeSize:
    Type: String
    Default: 50
    Description: "Required: Size of EBS volumes attached to worker nodes.
                  Increase this size if your pods are getting evicted with a disk pressure annotation."
  CustomAmiId:
    Type: String
    Default: ""
    Description: "Optional: If an AMI ID is specified, it is used instead of the default EKS images for cluster nodes."
  DBSnapshotIdentifier:
    Default: ""
    Description: "Optionnal: the snapshot arn used for the database.
                  If left empty, the default snapshot will be used. 
                  But if you wish to have an encrypted database, you will have to copy the public snapshot locally and select encryption and use that arn"
    Type: String
  DBInstanceClass:
    AllowedValues:
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
    Default: db.t3.xlarge
    Description: Amazon RDS instance type for the Oracle Database instance.
                 We recommend t3.xlarge for production use as a lower shape will be rather slow.
    Type: String
  DBMultiZone:
    Description: High Availability (Multi-AZ) for Oracle RDS.
        More informtion is available here - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html
    Type: String
    AllowedValues: [ 'true', 'false' ]
    Default: 'false'
  AdditionalEKSAdminUserArn:
    Default: ""
    Description: >
      Optional: IAM user Amazon Resource Name (ARN) to be granted administrative access to the EKS cluster.
      Write this as: "arn", "arn".
    Type: String
  AdditionalEKSAdminRoleArn:
    Default: ""
    Description: >
      Optional: IAM role Amazon Resource Name (ARN) to be granted administrative access to the EKS cluster.
      Write this as: "arn", "arn".
      This value can't include a path. Eg if the arn is arn:aws:iam::111122223333:role/my-team/developers/role-name write arn:aws:iam::111122223333:role/role-name instead."
    Type: String
  HostedZoneId:
    Default: ""
    Description: "Optional: Creates dns records for the given route 53 hosted zone if given."
    Type: String
  DomainName:
    Description: "Required: Root domain name used for load balancer rules
                  This is only the root domain name not the fqdn, eg: example.com"
    Type: String
  MainSubdomain:
    Default: "3decision"
    Description: "Required: Name used for the main app subdomain"
    Type: String
  ApiSubdomain:
    Default: "3decision-api"
    Description: "Required: Name used for the api subdomain"
    Type: String
  CertificateArn:
    Default: ""
    Description: "Optional: Arn of a certificate of the associated domain you want added to the load balancer"
    Type: String
  LoadBalancerType:
    AllowedValues:
      - internet-facing
      - internal
    Default: "internal"
    Description: "Type of loadbalancer created.
                  This can either be equal to internet-facing for public loadbalancer or internal for private loadbalancers"
    Type: String
  AzureClientId:
    Type: String
    Default: ""
    Description: "Optional: Will enable azure authentication if set.
                  Client id of azure app"
  AzureTenant:
    Type: String
    Default: ""
    Description: "Conditional: Should be given if azure client id variable is set.
                  Tenant id of the azure app"
  AzureSecret:
    Type: String
    Default: ""
    Description: "Conditional: Should be given if azure client id variable is set.
                  Secret of the azure app"
  OktaClientId:
    Type: String
    Default: ""
    Description: "Optional: Will enable okta authentication if set.
                  Client ID of the okta app"
  OktaSecret:
    Type: String
    Default: ""
    Description: "Conditional: Should be given if okta client id variable is set.
                  Secret of the okta app"
  OktaDomain:
    Type: String
    Default: ""
    Description: "Conditional: Should be given if okta client id variable is set.
                  Domain of the okta environment"
  OktaServerId:
    Type: String
    Default: ""
    Description: "Conditional: Should be given if okta client id variable is set.
                  Server Id of the okta environment"

Rules:
  DiscngineSupportedRegionRule:
    Assertions:
      - Assert:
          Fn::Contains:
            - - us-east-1
              - eu-central-1
            - !Ref AWS::Region
        AssertDescription: The Quick Start is supported only in us-east-1 and eu-central-1 AWS Regions. Please contact Discngine to request support for other Regions.
Conditions:
  CreateExecutionRole: !Equals [!Ref ExecutionRoleName, ""]
  CreateBucket: !Equals [!Ref BucketName, ""]
  UseLatestAMI: !Equals [!Ref ExecutionAmiId, ""]
  AzureUnused: !Equals [!Ref AzureClientId, ""]
  OktaUnused: !Equals [!Ref OktaClientId, ""]
  LatestTdecisionVersion: !Equals [!Ref TdecisionVersion, ""]
Resources:
  Role:
    Type: AWS::IAM::Role
    Condition: CreateExecutionRole
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - EIAMPolicyWildcardResource
          ignore_reasons:
            - EIAMPolicyWildcardResource: "eks ListClusters, DescribeAddonVersions, RegisterCluster, CreateCluster only allow wildcard resource."
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Principal:
              Service: !Sub ec2.${AWS::URLSuffix}
            Effect: Allow
            Sid: ''
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEC2FullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSCloudFormationFullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonRDSFullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/SecretsManagerReadWrite
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonRoute53FullAccess
      Policies:
        - PolicyName: EKSFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - eks:ListClusters
                  - eks:DescribeAddonVersions
                  - eks:RegisterCluster
                  - eks:CreateCluster
                Resource: '*'
              - Effect: Allow
                Action:
                  - eks:DeleteFargateProfile
                  - eks:UpdateClusterVersion
                  - eks:DescribeFargateProfile
                  - eks:ListTagsForResource
                  - eks:UpdateAddon
                  - eks:ListAddons
                  - eks:UpdateClusterConfig
                  - eks:DescribeAddon
                  - eks:UpdateNodegroupVersion
                  - eks:DescribeNodegroup
                  - eks:AssociateEncryptionConfig
                  - eks:ListUpdates
                  - eks:ListIdentityProviderConfigs
                  - eks:ListNodegroups
                  - eks:DisassociateIdentityProviderConfig
                  - eks:UntagResource
                  - eks:CreateNodegroup
                  - eks:DeregisterCluster
                  - eks:DeleteCluster
                  - eks:CreateFargateProfile
                  - eks:ListFargateProfiles
                  - eks:DescribeIdentityProviderConfig
                  - eks:DeleteAddon
                  - eks:DeleteNodegroup
                  - eks:DescribeUpdate
                  - eks:TagResource
                  - eks:AccessKubernetesApi
                  - eks:CreateAddon
                  - eks:UpdateNodegroupConfig
                  - eks:DescribeCluster
                  - eks:AssociateIdentityProviderConfig
                Resource:
                  - !Sub arn:${AWS::Partition}:eks:*:${AWS::AccountId}:identityproviderconfig/*/*/*/*
                  - !Sub arn:${AWS::Partition}:eks:*:${AWS::AccountId}:cluster/*
                  - !Sub arn:${AWS::Partition}:eks:*:${AWS::AccountId}:nodegroup/*/*/*
                  - !Sub arn:${AWS::Partition}:eks:*:${AWS::AccountId}:addon/*/*/*
                  - !Sub arn:${AWS::Partition}:eks:*:${AWS::AccountId}:fargateprofile/*/*/*
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                Resource: !Sub arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/*
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:DescribeKey
                  - kms:CreateKey
                  - kms:GetKeyPolicy
                  - kms:GetKeyRotationStatus
                  - kms:ListResourceTags
                  - kms:ScheduleKeyDeletion
                Resource: '*'
              - Effect: Allow
                Action: logs:PutRetentionPolicy
                Resource: !Sub arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:*
        - PolicyName: IAMLimitedAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:GetInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:ListInstanceProfiles
                  - iam:AddRoleToInstanceProfile
                  - iam:ListInstanceProfilesForRole
                  - iam:PassRole
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:GetRolePolicy
                  - iam:GetOpenIDConnectProvider
                  - iam:CreateOpenIDConnectProvider
                  - iam:DeleteOpenIDConnectProvider
                  - iam:TagOpenIDConnectProvider
                  - iam:ListAttachedRolePolicies
                  - iam:TagRole
                  - iam:GetPolicy
                  - iam:CreatePolicy
                  - iam:DeletePolicy
                  - iam:ListPolicyVersions
                  - iam:ListRolePolicies
                  - iam:GetPolicyVersion
                  - iam:CreateServiceLinkedRole
                  - iam:UpdateAssumeRolePolicy
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/3decision-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/3decision-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/eks.amazonaws.com/AWSServiceRoleForAmazonEKS
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/eks-nodegroup.amazonaws.com/AWSServiceRoleForAmazonEKSNodegroup

              - Effect: Allow
                Action:
                  - iam:GetRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*
        - PolicyName: AccessStateBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:ListBuckets"
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource:
                  - !If [CreateBucket, !GetAtt StateBucket.Arn, !Sub 'arn:aws:s3:::${BucketName}' ]
                  - !If [CreateBucket, !Sub '${StateBucket.Arn}/*', !Sub 'arn:aws:s3:::${BucketName}/*' ]
        - PolicyName: AccessLambdaFunctions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:CreateFunction"
                  - "lambda:DeleteFunction"
                  - "lambda:InvokeFunction"
                  - "lambda:UpdateFunctionCode"
                  - "lambda:UpdateFunctionConfiguration"
                  - "lambda:GetFunction"
                  - "lambda:ListVersionsByFunction"
                  - "lambda:GetFunctionCodeSigningConfig"
                  - "lambda:AddPermission"
                  - "lambda:GetPolicy"
                  - "lambda:PublishVersion"
                  - "lambda:ListFunctions"
                  - "lambda:TagResource"
                  - "lambda:RemovePermission"
                Resource:
                  - !Sub "arn:${AWS::Partition}:lambda:*:*:function:3decision-rotator-lambda"

  StateBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Condition: CreateBucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  BootNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for the Boot node
      VpcId: !Ref VPCID

  BootNodeProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !If [CreateExecutionRole, !Ref Role, !Ref ExecutionRoleName]
      Path: /

  BootNode:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          Required:
            - StackPropertiesFile
        StackPropertiesFile:
          files:
            /opt/dng/terraform.sh:
              mode: '000755'
              owner: root
              group: root
              content:
                !Sub |
                  sudo yum install git -y

                  mkdir -p /opt/dng
                  cd /opt/dng

                  sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                  sudo unzip awscliv2.zip
                  sudo ./aws/install --bin-dir /usr/bin --update

                  sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                  sudo chmod +x kubectl
                  sudo mv kubectl /usr/local/bin

                  wget https://releases.hashicorp.com/terraform/1.4.6/terraform_1.4.6_linux_amd64.zip
                  unzip terraform_1.4.6_linux_amd64.zip
                  sudo mv terraform /usr/local/bin

                  git clone -b ${GitBranch} https://github.com/Discngine/quickstart-discngine-3decision.git
    Properties:
      ImageId: !If [UseLatestAMI, '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}', !Ref ExecutionAmiId]
      InstanceType: t2.micro
      IamInstanceProfile: !Ref BootNodeProfile
      SubnetId: !Ref PrivateSubnet1ID
      KeyName: !Ref KeyPairName
      SecurityGroupIds: 
        - !Ref BootNodeSecurityGroup
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash

            ret=0
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource BootNode --configsets Required --region ${AWS::Region}
            i=0
            while [ ! -f /opt/dng/terraform.sh ]; do
              echo "/opt/dng/terraform.sh isn't available yet, waiting"
              sleep 5
              i=$[$i+1]
              if [ $i -ge 12 ]; then
                echo "Timed out waiting 60 seconds for /opt/dng/terraform.sh to be available"
                ret=65
                break;
              fi
            done
            if [ -f /opt/dng/terraform.sh ]; then
              echo "/opt/dng/terraform.sh ready:"
              cat /opt/dng/terraform.sh
              /opt/dng/terraform.sh
              ret=$?
            fi
            /opt/aws/bin/cfn-signal -e $ret --stack ${AWS::StackName} --resource BootNode --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M

  LaunchTerraform:
    Type: AWS::SSM::Association
    Properties:
      Name: AWS-RunShellScript
      Targets:
      - Key: InstanceIds
        Values:
        - !Ref BootNode
      Parameters:
        commands:
        - !Sub 
          - |
            #!/bin/bash
            cd /opt/dng/quickstart-discngine-3decision/terraform
            git pull
            git checkout ${GitBranch}

            cat > backend.conf << EOF
            region = "${AWS::Region}"
            bucket = "${Bucket}"
            EOF

            cat > vars.tfvars << EOF
            region = "${AWS::Region}"
            keypair_name = "${KeyPairName}"
            force_destroy = true
            public_final_snapshot = false
            private_final_snapshot = false
            skip_db_final_snapshot = true
            create_network = false
            vpc_id = "${VPCID}"
            private_subnet_ids = ["${PrivateSubnet1ID}", "${PrivateSubnet2ID}", "${PrivateSubnet3ID}"]
            custom_ami = "${CustomAmiId}"
            db_snapshot_identifier = "${DBSnapshotIdentifier}"
            db_high_availability = ${DBMultiZone}
            db_backup_retention_period = 7
            load_balancer_type = "${LoadBalancerType}"
            certificate_arn = "${CertificateArn}"
            domain = "${DomainName}"
            main_subdomain = "${MainSubdomain}"
            api_subdomain = "${ApiSubdomain}"
            hosted_zone_id = "${HostedZoneId}"
            azure_oidc = {
              client_id = "${AzureClient}"
              tenant    = "${AzureTenant}"
              secret    = "${AzureSecret}"
            }
            okta_oidc = {
              client_id = "${OktaClient}"
              domain    = "${OktaDomain}"
              server_id = "${OktaServerId}"
              secret    = "${OktaSecret}"
            }
            google_oidc = {
              client_id = "none"
              secret    = ""
            }
            public_volume_snapshot = ""
            private_volume_snapshot = ""

            kubernetes_version = "${KubernetesVersion}"
            db_instance_type = "${DBInstanceClass}"
            license_type = "license-included"
            eks_instance_type = "${NodeInstanceType}"
            boot_volume_size = "${NodeVolumeSize}"

            additional_eks_users_arn = [${AdditionalEKSAdminUserArn}]
            additional_eks_roles_arn = [${AdditionalEKSAdminRoleArn}]

            tdecision_chart = {
              version = ${TdecisionVersion}
              namespace = "${TdecisionNamespace}"
            }
            EOF

            terraform init -backend-config=backend.conf -reconfigure -upgrade
            terraform ${StackOperation} -var-file=vars.tfvars -auto-approve
          - OktaClient: !If [ OktaUnused, "none", !Ref OktaClientId ]
            AzureClient: !If [ AzureUnused, "none", !Ref AzureClientId ]
            Bucket: !If [ CreateBucket, !Ref StateBucket, !Ref BucketName ]
            TdecisionVersion: !If [ LatestTdecisionVersion, "null", !Sub '"${TdecisionVersion}"' ]
            
        workingDirectory:
        - "/opt/dng"
      OutputLocation:
        S3Location: 
          OutputS3BucketName: !If [CreateBucket, !Ref StateBucket, !Ref BucketName]
          OutputS3KeyPrefix: 'logs/'
          OutputS3Region: !Ref AWS::Region
      WaitForSuccessTimeoutSeconds: 3600
